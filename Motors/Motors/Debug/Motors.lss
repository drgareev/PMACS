
Motors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002b0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000334  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016d0  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e29  00000000  00000000  00001b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a2c  00000000  00000000  0000295d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000018c  00000000  00000000  0000338c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000628  00000000  00000000  00003518  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000080e  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  0000434e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	da c0       	rjmp	.+436    	; 0x2ac <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include "main.h"

int main(void)
{
	m17_init1();
  fa:	24 d0       	rcall	.+72     	; 0x144 <m17_init1>
	m17_init2();
  fc:	5c d0       	rcall	.+184    	; 0x1b6 <m17_init2>
	m17_init3();
  fe:	60 d0       	rcall	.+192    	; 0x1c0 <m17_init3>
 100:	64 d0       	rcall	.+200    	; 0x1ca <sm_init>
	sm_init();
 102:	c1 e0       	ldi	r28, 0x01	; 1
#include "main.h"

int main(void)
{
 104:	d2 e0       	ldi	r29, 0x02	; 2
	
	while (1)
	{
		for (int k=0;k<=512;k++)
		{
			sm_forward();
 106:	c0 d0       	rcall	.+384    	; 0x288 <sm_forward>
 108:	22 d0       	rcall	.+68     	; 0x14e <m17_left1>
			m17_left1();
 10a:	3b d0       	rcall	.+118    	; 0x182 <m17_right1>
 10c:	21 97       	sbiw	r28, 0x01	; 1
			m17_right1();
 10e:	d9 f7       	brne	.-10     	; 0x106 <main+0xc>
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	85 ea       	ldi	r24, 0xA5	; 165
	m17_init3();
	sm_init();
	
	while (1)
	{
		for (int k=0;k<=512;k++)
 114:	9e e0       	ldi	r25, 0x0E	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	21 50       	subi	r18, 0x01	; 1
 118:	80 40       	sbci	r24, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x1c>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x26>
 120:	00 00       	nop
 122:	c1 e0       	ldi	r28, 0x01	; 1
 124:	d2 e0       	ldi	r29, 0x02	; 2
			m17_right1();
		}
		_delay_ms(300);
		for (int k=0;k<=512;k++)
		{
			sm_back();
 126:	b9 d0       	rcall	.+370    	; 0x29a <sm_back>
 128:	12 d0       	rcall	.+36     	; 0x14e <m17_left1>
			m17_left1();
 12a:	2b d0       	rcall	.+86     	; 0x182 <m17_right1>
 12c:	21 97       	sbiw	r28, 0x01	; 1
			m17_right1();
 12e:	d9 f7       	brne	.-10     	; 0x126 <main+0x2c>
 130:	2f ef       	ldi	r18, 0xFF	; 255
 132:	85 ea       	ldi	r24, 0xA5	; 165
			sm_forward();
			m17_left1();
			m17_right1();
		}
		_delay_ms(300);
		for (int k=0;k<=512;k++)
 134:	9e e0       	ldi	r25, 0x0E	; 14
 136:	21 50       	subi	r18, 0x01	; 1
 138:	80 40       	sbci	r24, 0x00	; 0
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <main+0x3c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x46>
 140:	00 00       	nop
 142:	df cf       	rjmp	.-66     	; 0x102 <main+0x8>

00000144 <m17_init1>:
 144:	08 9a       	sbi	0x01, 0	; 1
 146:	09 9a       	sbi	0x01, 1	; 1
 148:	10 9a       	sbi	0x02, 0	; 2
		NEMA_PORT |= (1 << STEP2); // устанавливаем 1
		TIME;
		NEMA_PORT &= ~(1 << STEP2); // устанавливаем 0
		TIME;
	}
}
 14a:	11 98       	cbi	0x02, 1	; 2
 14c:	08 95       	ret

0000014e <m17_left1>:
 14e:	11 9a       	sbi	0x02, 1	; 2
 150:	88 ec       	ldi	r24, 0xC8	; 200
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	10 9a       	sbi	0x02, 0	; 2
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	31 ee       	ldi	r19, 0xE1	; 225
 15a:	44 e0       	ldi	r20, 0x04	; 4
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	30 40       	sbci	r19, 0x00	; 0
 160:	40 40       	sbci	r20, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <m17_left1+0xe>
 164:	00 c0       	rjmp	.+0      	; 0x166 <m17_left1+0x18>
 166:	00 00       	nop
 168:	10 98       	cbi	0x02, 0	; 2
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	31 ee       	ldi	r19, 0xE1	; 225
 16e:	44 e0       	ldi	r20, 0x04	; 4
 170:	21 50       	subi	r18, 0x01	; 1
 172:	30 40       	sbci	r19, 0x00	; 0
 174:	40 40       	sbci	r20, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <m17_left1+0x22>
 178:	00 c0       	rjmp	.+0      	; 0x17a <m17_left1+0x2c>
 17a:	00 00       	nop
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	51 f7       	brne	.-44     	; 0x154 <m17_left1+0x6>
 180:	08 95       	ret

00000182 <m17_right1>:
 182:	11 98       	cbi	0x02, 1	; 2
 184:	88 ec       	ldi	r24, 0xC8	; 200
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	10 9a       	sbi	0x02, 0	; 2
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	31 ee       	ldi	r19, 0xE1	; 225
 18e:	44 e0       	ldi	r20, 0x04	; 4
 190:	21 50       	subi	r18, 0x01	; 1
 192:	30 40       	sbci	r19, 0x00	; 0
 194:	40 40       	sbci	r20, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <m17_right1+0xe>
 198:	00 c0       	rjmp	.+0      	; 0x19a <m17_right1+0x18>
 19a:	00 00       	nop
 19c:	10 98       	cbi	0x02, 0	; 2
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	31 ee       	ldi	r19, 0xE1	; 225
 1a2:	44 e0       	ldi	r20, 0x04	; 4
 1a4:	21 50       	subi	r18, 0x01	; 1
 1a6:	30 40       	sbci	r19, 0x00	; 0
 1a8:	40 40       	sbci	r20, 0x00	; 0
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <m17_right1+0x22>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <m17_right1+0x2c>
 1ae:	00 00       	nop
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	51 f7       	brne	.-44     	; 0x188 <m17_right1+0x6>
 1b4:	08 95       	ret

000001b6 <m17_init2>:
 1b6:	0a 9a       	sbi	0x01, 2	; 1
 1b8:	0b 9a       	sbi	0x01, 3	; 1
 1ba:	12 9a       	sbi	0x02, 2	; 2
 1bc:	13 98       	cbi	0x02, 3	; 2
 1be:	08 95       	ret

000001c0 <m17_init3>:

void m17_init3(void)
{
	// Nema17 режим для STEP и DIR как OUTPUT
	NEMA_DDR  |= 1 << STEP3;
 1c0:	0c 9a       	sbi	0x01, 4	; 1
	NEMA_DDR  |= 1 << DIR3;
 1c2:	0d 9a       	sbi	0x01, 5	; 1

	// начальные значения Nema17
	NEMA_PORT |= (1 << STEP3); // устанавливаем 1
 1c4:	14 9a       	sbi	0x02, 4	; 2
	NEMA_PORT &= ~(1 << DIR3); // устанавливаем 0
 1c6:	15 98       	cbi	0x02, 5	; 2
 1c8:	08 95       	ret

000001ca <sm_init>:
#include "SM.h"

void sm_init(void)
{
	SM_DDR |= (1 << IN4)|(1 << IN3)|(1 << IN2)|(1 << IN1);
 1ca:	84 b1       	in	r24, 0x04	; 4
 1cc:	80 6b       	ori	r24, 0xB0	; 176
 1ce:	84 b9       	out	0x04, r24	; 4
	SM_PORT &= ~((1 << IN4)|(1 << IN3)|(1 << IN2)|(1 << IN1));
 1d0:	85 b1       	in	r24, 0x05	; 5
 1d2:	8f 74       	andi	r24, 0x4F	; 79
 1d4:	85 b9       	out	0x05, r24	; 5
 1d6:	08 95       	ret

000001d8 <sm_set1>:
}

void sm_set1(void)
{
	SM_PORT |= 1 << IN1;
 1d8:	2c 9a       	sbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN2);
 1da:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN3);
 1dc:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN4);
 1de:	2f 98       	cbi	0x05, 7	; 5
 1e0:	8f e1       	ldi	r24, 0x1F	; 31
 1e2:	9e e4       	ldi	r25, 0x4E	; 78
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <sm_set1+0xc>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <sm_set1+0x12>
 1ea:	00 00       	nop
 1ec:	08 95       	ret

000001ee <sm_set2>:
	SM_DELAY;
}

void sm_set2(void)
{
	SM_PORT |= 1 << IN1;
 1ee:	2c 9a       	sbi	0x05, 4	; 5
	SM_PORT |= 1 << IN4;
 1f0:	2f 9a       	sbi	0x05, 7	; 5
	SM_PORT &= ~(1 << IN2);
 1f2:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN3);
 1f4:	2d 98       	cbi	0x05, 5	; 5
 1f6:	8f e1       	ldi	r24, 0x1F	; 31
 1f8:	9e e4       	ldi	r25, 0x4E	; 78
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <sm_set2+0xc>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <sm_set2+0x12>
 200:	00 00       	nop
 202:	08 95       	ret

00000204 <sm_set3>:
	SM_DELAY;
}

void sm_set3(void)
{
	SM_PORT |= 1 << IN4;
 204:	2f 9a       	sbi	0x05, 7	; 5
	SM_PORT &= ~(1 << IN1);
 206:	2c 98       	cbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN2);
 208:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN3);
 20a:	2d 98       	cbi	0x05, 5	; 5
 20c:	8f e1       	ldi	r24, 0x1F	; 31
 20e:	9e e4       	ldi	r25, 0x4E	; 78
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <sm_set3+0xc>
 214:	00 c0       	rjmp	.+0      	; 0x216 <sm_set3+0x12>
 216:	00 00       	nop
 218:	08 95       	ret

0000021a <sm_set4>:
	SM_DELAY;
}

void sm_set4(void)
{
	SM_PORT |= 1 << IN4;
 21a:	2f 9a       	sbi	0x05, 7	; 5
	SM_PORT |= 1 << IN3;
 21c:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN1);
 21e:	2c 98       	cbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN2);
 220:	2d 98       	cbi	0x05, 5	; 5
 222:	8f e1       	ldi	r24, 0x1F	; 31
 224:	9e e4       	ldi	r25, 0x4E	; 78
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <sm_set4+0xc>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <sm_set4+0x12>
 22c:	00 00       	nop
 22e:	08 95       	ret

00000230 <sm_set5>:
	SM_DELAY;
}

void sm_set5(void)
{
	SM_PORT |= 1 << IN3;
 230:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN1);
 232:	2c 98       	cbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN2);
 234:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN4);
 236:	2f 98       	cbi	0x05, 7	; 5
 238:	8f e1       	ldi	r24, 0x1F	; 31
 23a:	9e e4       	ldi	r25, 0x4E	; 78
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <sm_set5+0xc>
 240:	00 c0       	rjmp	.+0      	; 0x242 <sm_set5+0x12>
 242:	00 00       	nop
 244:	08 95       	ret

00000246 <sm_set6>:
	SM_DELAY;
}

void sm_set6(void)
{
	SM_PORT |= 1 << IN3;
 246:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT |= 1 << IN2;
 248:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN1);
 24a:	2c 98       	cbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN4);
 24c:	2f 98       	cbi	0x05, 7	; 5
 24e:	8f e1       	ldi	r24, 0x1F	; 31
 250:	9e e4       	ldi	r25, 0x4E	; 78
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <sm_set6+0xc>
 256:	00 c0       	rjmp	.+0      	; 0x258 <sm_set6+0x12>
 258:	00 00       	nop
 25a:	08 95       	ret

0000025c <sm_set7>:
	SM_DELAY;
}

void sm_set7(void)
{
	SM_PORT |= 1 << IN2;
 25c:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN1);
 25e:	2c 98       	cbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN3);
 260:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN4);
 262:	2f 98       	cbi	0x05, 7	; 5
 264:	8f e1       	ldi	r24, 0x1F	; 31
 266:	9e e4       	ldi	r25, 0x4E	; 78
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <sm_set7+0xc>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <sm_set7+0x12>
 26e:	00 00       	nop
 270:	08 95       	ret

00000272 <sm_set8>:
	SM_DELAY;
}

void sm_set8(void)
{
	SM_PORT |= 1 << IN2;
 272:	2d 9a       	sbi	0x05, 5	; 5
	SM_PORT |= 1 << IN1;
 274:	2c 9a       	sbi	0x05, 4	; 5
	SM_PORT &= ~(1 << IN3);
 276:	2d 98       	cbi	0x05, 5	; 5
	SM_PORT &= ~(1 << IN4);
 278:	2f 98       	cbi	0x05, 7	; 5
 27a:	8f e1       	ldi	r24, 0x1F	; 31
 27c:	9e e4       	ldi	r25, 0x4E	; 78
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <sm_set8+0xc>
 282:	00 c0       	rjmp	.+0      	; 0x284 <sm_set8+0x12>
 284:	00 00       	nop
 286:	08 95       	ret

00000288 <sm_forward>:
	SM_DELAY;
}

void sm_forward(void)
{
	sm_set1();
 288:	a7 df       	rcall	.-178    	; 0x1d8 <sm_set1>
	sm_set2();
 28a:	b1 df       	rcall	.-158    	; 0x1ee <sm_set2>
	sm_set3();
 28c:	bb df       	rcall	.-138    	; 0x204 <sm_set3>
	sm_set4();
 28e:	c5 df       	rcall	.-118    	; 0x21a <sm_set4>
	sm_set5();
 290:	cf df       	rcall	.-98     	; 0x230 <sm_set5>
 292:	d9 df       	rcall	.-78     	; 0x246 <sm_set6>
	sm_set6();
 294:	e3 df       	rcall	.-58     	; 0x25c <sm_set7>
 296:	ed cf       	rjmp	.-38     	; 0x272 <sm_set8>
	sm_set7();
 298:	08 95       	ret

0000029a <sm_back>:
 29a:	eb df       	rcall	.-42     	; 0x272 <sm_set8>
	sm_set8();
 29c:	df df       	rcall	.-66     	; 0x25c <sm_set7>
 29e:	d3 df       	rcall	.-90     	; 0x246 <sm_set6>
 2a0:	c7 df       	rcall	.-114    	; 0x230 <sm_set5>
{
	sm_set8();
	sm_set7();
	sm_set6();
	sm_set5();
	sm_set4();
 2a2:	bb df       	rcall	.-138    	; 0x21a <sm_set4>
 2a4:	af df       	rcall	.-162    	; 0x204 <sm_set3>
	sm_set3();
 2a6:	a3 df       	rcall	.-186    	; 0x1ee <sm_set2>
 2a8:	97 cf       	rjmp	.-210    	; 0x1d8 <sm_set1>
	sm_set2();
 2aa:	08 95       	ret

000002ac <_exit>:
 2ac:	f8 94       	cli

000002ae <__stop_program>:
	sm_set1();
 2ae:	ff cf       	rjmp	.-2      	; 0x2ae <__stop_program>
